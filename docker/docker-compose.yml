version: '3.4'

services:
  mastodon-db:
    restart: always
    container_name: mastodon-db
    image: postgres:14-alpine
    networks:
      - mastodon-backend
    shm_size: 256mb
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'mastodon']
    volumes:
      - ./mastodon/postgres14:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=PLACEHOLDER
      - POSTGRES_USER=PLACEHOLDER

  mastodon-redis:
    restart: always
    container_name: mastodon-redis
    image: redis:6-alpine
    networks:
      - mastodon-backend
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./mastodon/redis:/data      

  mastodon-web:
    #build: ./mastodon/mastodon
    image: tootsuite/mastodon:v4.0.2
    container_name: mastodon-web
    networks:
      - mastodon-web
      - mastodon-backend
    restart: always
    env_file: ./mastodon/mastodon/.env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - mastodon-db
      - mastodon-redis
      # - es
    volumes:
      - ./mastodon/mastodon/public/system:/mastodon/public/system

  mastodon-streaming:
    #build: ./mastodon/mastodon
    image: tootsuite/mastodon:v4.0.2
    container_name: mastodon-streaming
    networks:
      - mastodon-web
      - mastodon-backend
    restart: always
    env_file: ./mastodon/mastodon/.env.production
    command: node ./streaming
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - mastodon-db
      - mastodon-redis

  mastodon-sidekiq:
    #build: ./mastodon/mastodon
    image: tootsuite/mastodon:v4.0.2
    container_name: mastodon-sidekiq
    networks:
      - mastodon-web
      - mastodon-backend
    restart: always
    env_file: ./mastodon/mastodon/.env.production
    command: bundle exec sidekiq
    depends_on:
      - mastodon-db
      - mastodon-redis
    volumes:
      - ./mastodon/mastodon/public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    
  caddy:
    image: caddy:2
    container_name: caddy
    networks:
      - mastodon-web
    restart: always
    ports:
      - 80:80  
      - 443:443
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/config:/config
      - ./caddy/data:/data
      - ./mastodon/mastodon/public:/srv/mastodon/public:ro
    environment:
      - EMAIL=your@email.net
      - LOG_FILE=/data/access.log
      
networks:
  mastodon-web:
  mastodon-backend:
    external: false
